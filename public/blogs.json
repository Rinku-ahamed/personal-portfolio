[
  {
    "id": 1,
    "name": "What is React?",
    "image": "https://i.ibb.co/y8LknhT/reactjs.jpg",
    "description": "React.js is a JavaScript library developed by Facebook for building user interfaces (UIs) in web applications. It follows a component-based architecture, where the UI is divided into reusable components. React.js efficiently updates the virtual DOM (a virtual representation of the actual DOM) and reconciles it with the real DOM, resulting in improved performance. JSX, a syntax extension, allows developers to write HTML-like code within JavaScript, making it easier to define component structures. React.js follows a unidirectional data flow, where data flows from parent components to child components, maintaining a predictable state. The introduction of React Hooks simplifies state management and lifecycle handling in functional components. React.js has gained popularity due to its performance, reusability, and ease of development, making it widely used for web, mobile (using React Native), and desktop (using frameworks like Electron) applications.",
    "features": [
      "Components: React divides the user interface into reusable, self-contained components. Each component encapsulates its own logic, state, and UI elements. These components can be composed together to build complex UIs.",
      "JSX: JSX is a syntax extension for JavaScript that allows developers to write HTML-like code within JavaScript. JSX simplifies the process of defining and rendering React components.",
      "One-way data flow: React follows a unidirectional data flow, where data flows from parent components to child components. This ensures predictable and manageable data flow, "
    ]
  },
  {
    "id": 2,
    "name": "What is Tailwind CSS?",
    "image": "https://i.ibb.co/pWg3J84/tailwindcss.png",
    "description": "Tailwind CSS is a popular utility-first CSS framework used for building modern user interfaces. It provides a comprehensive set of ready-to-use utility classes that can be applied directly in HTML to style elements. Unlike traditional CSS frameworks, which often have pre-designed components and predefined styles, Tailwind CSS focuses on providing low-level utility classes that allow developers to quickly build custom designs.The core idea behind Tailwind CSS is to provide a large collection of utility classes that cover a wide range of styling properties. These utility classes are designed to be composable and can be combined to create complex layouts and styles. Instead of writing custom CSS rules for each element, developers can leverage the utility classes to apply styles directly in their HTML markup.Tailwind CSS follows a 'utility-first' approach, which means it prioritizes the use of small, single-purpose utility classes rather than writing custom CSS for individual components. This approach offers flexibility and speeds up development by reducing the need to write custom CSS code",
    "features": [
      "Utility classes: A comprehensive set of pre-defined utility classes that cover everything from typography and spacing to flexbox and grid layouts.",
      "Responsive design: Tailwind CSS includes responsive utility classes that enable developers to create designs that adapt to different screen sizes and devices.",
      "PurgeCSS integration: Tailwind CSS includes built-in integration with PurgeCSS, which automatically removes unused CSS classes from the final production build, resulting in smaller file sizes."
    ]
  }
]
